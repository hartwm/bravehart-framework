 //
 // Grid
 //
 $grid-columns:12 !default;
 $grid-gutter: 1rem !default; // Z-index
 $grid-breakpoints: (null:0, xs:30em, phone:30em, sm:36em, md: 48em, tablet: 48em, lg: 64em, xl: 80em, laptop: 80em, super:116em, desktop: 116em) !default;

 @mixin make-row($gutter: $grid-gutter) {
   display: flex;
   flex-wrap: wrap;
   margin-right: -$gutter / 2;
   margin-left: -$gutter / 2;
 }

 @mixin make-gap($count:8, $breakpoints:$grid-breakpoints) {
   @each $breakpoint in map-keys($breakpoints) {
     $infix: breakpoint-infix($breakpoint, $breakpoints);

     @for $i from 0 through $count {
       &.gap#{$infix}-#{$i} {

         [class^="col-"],
         [class*=" col-"] {
           padding-right: ($grid-gutter/$count) * $i;
           padding-left: ($grid-gutter/$count) * $i;
         }
       }
     }
   }
 }

 .col-inner {
   display: flex;
   height: 100%;

 }

 @mixin make-container($gutter: $grid-gutter) {
   margin: 0 auto;
   position: relative;
   width: 100%;
   padding-right: $gutter / 2;
   padding-left: $gutter / 2;
 }

 @mixin make-col($size, $columns: $grid-columns) {
   flex: 0 0 percentage($size / $columns);
   max-width: percentage($size / $columns);
 }

 @mixin make-fix-col($size) {
   flex: 0 0 percentage($size / 100);
   max-width: percentage($size / 100);
 }

 @mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter, $breakpoints: $grid-breakpoints) {

   // Common properties for all breakpoints
   %grid-column {
     position: relative;
     width: 100%;
     padding-right: $gutter / 2;
     padding-left: $gutter / 2;
   }

   @each $breakpoint in map-keys($breakpoints) {
     $infix: breakpoint-infix($breakpoint, $breakpoints);

     // Allow columns to stretch full width below their breakpoints
     @for $i from 1 through $columns {
       .col#{$infix}-#{$i} {
         @extend %grid-column;
       }
     }

     .col#{$infix},
     .col#{$infix}-auto {
       @extend %grid-column;
     }

     @include up($breakpoint, $breakpoints) {

       // Provide basic `.col-{bp}` classes for equal-width flexbox columns
       .col#{$infix} {
         flex-basis: 0;
         flex-grow: 1;
         max-width: 100%;
       }

       .col#{$infix}-auto {
         flex: 0 0 auto;
         width: auto;
         max-width: 100%; // Reset earlier grid tiers
       }

       @for $i from 1 through $columns {
         .col#{$infix}-#{$i} {
           @include make-col($i, $columns);
         }
       }

       $step: 5;

       @for $i from 1 through ceil(100/$step) {
         $value: $i*$step;

         .col#{$infix}_#{$value} {
           @include make-fix-col($value);
         }
       }

       .order#{$infix}-first {
         order: -1;
       }

       .order#{$infix}-last {
         order: $columns + 1;
       }

       @for $i from 0 through $columns {
         .order#{$infix}-#{$i} {
           order: $i;
         }
       }

     }
   }
 }




 @include make-grid-columns();

 .row {
   @include make-row();
   @include make-gap();
 }

 .container {
   @include make-container();
 }
